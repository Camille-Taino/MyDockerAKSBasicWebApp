# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: DockerCompose@0
  displayName: 'Build services'
  inputs:
    azureSubscription: 'Azure Resource Manager'
    azureContainerRegistry: '{"loginServer":"mydockerakscontainer.azurecr.io", "id" : "/subscriptions/590f9815-4379-4568-a5e9-9dbe425b826f/resourceGroups/hannah.c.m.taino-RG/providers/Microsoft.ContainerRegistry/registries/mydockerakscontainer"}'
    action: 'Build services'
    additionalImageTags: '$(Build.BuildId)'

- task: DockerCompose@0
  displayName: 'Push services'
  inputs:
    azureSubscription: 'Azure Resource Manager'
    azureContainerRegistry: '{"loginServer":"mydockerakscontainer.azurecr.io", "id" : "/subscriptions/590f9815-4379-4568-a5e9-9dbe425b826f/resourceGroups/hannah.c.m.taino-RG/providers/Microsoft.ContainerRegistry/registries/mydockerakscontainer"}'
    action: 'Push services'
    additionalImageTags: '$(Build.BuildId)'

- task: DockerCompose@0
  displayName: 'Lock services'
  inputs:
    azureSubscription: 'Azure Resource Manager'
    azureContainerRegistry: '{"loginServer":"mydockerakscontainer.azurecr.io", "id" : "/subscriptions/590f9815-4379-4568-a5e9-9dbe425b826f/resourceGroups/hannah.c.m.taino-RG/providers/Microsoft.ContainerRegistry/registries/mydockerakscontainer"}'
    action: 'Lock services'

- task: CopyFiles@2
  displayName: 'Copy Files to: deployment.yml'
  inputs:
    SourceFolder: deployment.yml
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    ArtifactName: deploy